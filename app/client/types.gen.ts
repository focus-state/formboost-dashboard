// This file is auto-generated by @hey-api/openapi-ts

export type BillingSubscription = {
    vendorId: string;
    cancelAtPeriodEnd: boolean;
    currency: StripePriceCurrency;
    currentPeriodEnd: number;
    currentPeriodStart: number;
    customerId: string;
    defaultPaymentMethod?: string | null;
    description?: string | null;
    extraData?: {
        [key: string]: unknown;
    } | null;
    status: StripeSubscriptionStatus;
    created: number;
    startDate: number;
    cancelAt?: number | null;
    canceledAt?: number | null;
    endedAt?: number | null;
    trialStart?: number | null;
    trialEnd?: number | null;
};

export type Domain = {
    id: string;
    url: string;
    name: string;
    description?: string | null;
};

export type DomainCreate = {
    url: string;
    name: string;
    description?: string | null;
};

export type DomainUpdate = {
    url?: string | null;
    name?: string | null;
    description?: string | null;
};

export type FieldType = 'checkbox' | 'color' | 'date' | 'datetime-local' | 'email' | 'file' | 'hidden' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'select' | 'tel' | 'text' | 'time' | 'url' | 'week';

export type Form = {
    id: string;
    name: string;
    description?: string | null;
    isActive: boolean;
    fields?: Array<FormField>;
};

export type FormCreate = {
    name: string;
    description?: string | null;
};

export type FormField = {
    id: string;
    name: string;
    label?: string | null;
    type: FieldType;
    accept?: Array<FormFieldAccept> | null;
    max?: number | null;
    maxlength?: number | null;
    min?: number | null;
    minlength?: number | null;
    multiple: boolean;
    pattern?: string | null;
    readonly: boolean;
    required: boolean;
    minItems?: number | null;
    maxItems?: number | null;
    maxFileUploadSize?: number | null;
    acceptableFileTypes?: Array<FormFieldAcceptableFileTypes> | null;
};

export type FormFieldAccept = 'text/plain' | '.txt' | 'image/vnd.dwg' | '.dwg' | 'image/x-xcf' | '.xcf' | 'image/jpeg' | '.jpg' | 'image/jpx' | '.jpx' | 'image/apng' | '.apng' | 'image/png' | '.png' | 'image/gif' | '.gif' | 'image/webp' | '.webp' | 'image/tiff' | '.tif' | 'image/x-canon-cr2' | '.cr_2' | 'image/bmp' | '.bmp' | 'image/vnd.ms-photo' | '.jxr' | 'image/vnd.adobe.photoshop' | '.psd' | 'image/x-icon' | '.ico' | 'image/heic' | '.heic' | 'application/dicom' | '.dcm' | 'image/avif' | '.avif' | 'audio/aac' | '.aac' | 'audio/midi' | '.midi' | 'audio/mpeg' | '.mp_3' | 'audio/mp4' | '.m_4_a' | 'audio/ogg' | '.ogg' | 'audio/x-flac' | '.flac' | 'audio/x-wav' | '.wav' | 'audio/amr' | '.amr' | 'audio/x-aiff' | '.aiff' | 'video/3gpp' | '.3_gp' | 'video/mp4' | '.mp_4' | 'video/x-m4v' | '.m_4_v' | 'video/x-matroska' | '.mkv' | 'video/quicktime' | '.mov' | 'video/x-msvideo' | '.avi' | 'video/x-ms-wmv' | '.wmv' | 'video/mpeg' | '.mpg' | 'video/webm' | '.webm' | 'video/x-flv' | '.flv' | 'application/font-woff' | '.woff' | '.woff_2' | 'application/font-sfnt' | '.ttf' | '.otf' | 'application/msword' | '.doc' | 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' | '.docx' | 'application/vnd.oasis.opendocument.text' | '.odt' | 'application/vnd.ms-excel' | '.xls' | 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' | '.xlsx' | 'application/vnd.oasis.opendocument.spreadsheet' | '.ods' | 'application/vnd.ms-powerpoint' | '.ppt' | 'application/vnd.openxmlformats-officedocument.presentationml.presentation' | '.pptx' | 'application/vnd.oasis.opendocument.presentation' | '.odp' | 'application/x-brotli' | '.br' | 'application/x-rpm' | '.rpm' | 'application/epub+zip' | '.epub' | 'application/zip' | '.zip' | 'application/x-tar' | '.tar' | 'application/x-rar-compressed' | '.rar' | 'application/gzip' | '.gz' | 'application/x-bzip2' | '.bz_2' | 'application/x-7z-compressed' | '.7_z' | 'application/pdf' | '.pdf' | 'application/x-msdownload' | '.exe' | 'application/x-shockwave-flash' | '.swf' | 'application/rtf' | '.rtf' | 'application/x-nintendo-nes-rom' | '.nes' | 'application/x-google-chrome-extension' | '.crx' | 'application/vnd.ms-cab-compressed' | '.cab' | 'application/octet-stream' | '.eot' | 'application/postscript' | '.ps' | 'application/x-xz' | '.xz' | 'application/x-sqlite3' | '.sqlite' | 'application/x-deb' | '.deb' | 'application/x-unix-archive' | '.ar' | 'application/x-compress' | '.z' | 'application/x-lzop' | '.lzo' | 'application/x-lzip' | '.lz' | 'application/x-executable' | '.elf' | 'application/x-lz4' | '.lz_4' | 'application/zstd' | '.zst' | 'application/wasm' | '.wasm';

export type FormFieldAcceptableFileTypes = 'font' | 'audio' | 'video' | 'image' | 'archive';

export type FormFieldCreate = {
    name: string;
    type: FieldType;
    accept?: Array<FormFieldAccept> | null;
    max?: number | null;
    maxlength?: number | null;
    min?: number | null;
    minlength?: number | null;
    multiple?: boolean;
    pattern?: string | null;
    readonly?: boolean;
    required?: boolean;
    minItems?: number | null;
    maxItems?: number | null;
    maxFileUploadSize?: number | null;
    acceptableFileTypes?: Array<FormFieldAcceptableFileTypes> | null;
};

export type FormFieldUpdate = {
    name?: string | null;
    label?: string | null;
    type?: FieldType | null;
    accept?: Array<FormFieldAccept> | null;
    max?: number | null;
    maxlength?: number | null;
    min?: number | null;
    minlength?: number | null;
    multiple?: boolean | null;
    pattern?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    minItems?: number | null;
    maxItems?: number | null;
    maxFileUploadSize?: number | null;
    acceptableFileTypes?: Array<FormFieldAcceptableFileTypes> | null;
};

export type FormUpdate = {
    name?: string | null;
    description?: string | null;
};

export type LoginErrorContainer = {
    statusCode: 403;
    detail: string;
};

export type NotificationSettings = {
    id: string;
    to?: Array<string> | null;
    cc?: Array<string> | null;
    bcc?: Array<string> | null;
    phoneNumbers?: Array<string> | null;
    formId: string;
};

export type NotificationSettingsCreate = {
    to?: Array<string> | null;
    cc?: Array<string> | null;
    bcc?: Array<string> | null;
    phoneNumbers?: Array<string> | null;
};

export type NotificationSettingsUpdate = {
    to?: Array<string> | null;
    cc?: Array<string> | null;
    bcc?: Array<string> | null;
    phoneNumbers?: Array<string> | null;
};

export type OAuth2Login = {
    accessToken: string;
    tokenType: string;
    refreshToken?: string | null;
    expiresIn?: number | null;
};

export type Project = {
    id: string;
    name: string;
    description?: string | null;
    slug: string;
    userId: string;
    teamId: string;
};

export type ProjectCreate = {
    name: string;
    description?: string | null;
    slug?: string | null;
};

export type ProjectUpdate = {
    name?: string | null;
    description?: string | null;
    slug?: string | null;
};

export type StripePriceCurrency = 'usd' | 'aed' | 'afn' | 'all' | 'amd' | 'ang' | 'aoa' | 'ars' | 'aud' | 'awg' | 'azn' | 'bam' | 'bbd' | 'bdt' | 'bgn' | 'bif' | 'bmd' | 'bnd' | 'bob' | 'brl' | 'bsd' | 'bwp' | 'byn' | 'bzd' | 'cad' | 'cdf' | 'chf' | 'clp' | 'cny' | 'cop' | 'crc' | 'cve' | 'czk' | 'djf' | 'dkk' | 'dop' | 'dzd' | 'egp' | 'etb' | 'eur' | 'fjd' | 'fkp' | 'gbp' | 'gel' | 'gip' | 'gmd' | 'gnf' | 'gtq' | 'gyd' | 'hkd' | 'hnl' | 'htg' | 'huf' | 'idr' | 'ils' | 'inr' | 'isk' | 'jmd' | 'jpy' | 'kes' | 'kgs' | 'khr' | 'kmf' | 'krw' | 'kyd' | 'kzt' | 'lak' | 'lbp' | 'lkr' | 'lrd' | 'lsl' | 'mad' | 'mdl' | 'mga' | 'mkd' | 'mmk' | 'mnt' | 'mop' | 'mur' | 'mvr' | 'mwk' | 'mxn' | 'myr' | 'mzn' | 'nad' | 'ngn' | 'nio' | 'nok' | 'npr' | 'nzd' | 'pab' | 'pen' | 'pgk' | 'php' | 'pkr' | 'pln' | 'pyg' | 'qar' | 'ron' | 'rsd' | 'rub' | 'rwf' | 'sar' | 'sbd' | 'scr' | 'sek' | 'sgd' | 'shp' | 'sle' | 'sos' | 'srd' | 'std' | 'szl' | 'thb' | 'tjs' | 'top' | 'try' | 'ttd' | 'twd' | 'tzs' | 'uah' | 'ugx' | 'uyu' | 'uzs' | 'vnd' | 'vuv' | 'wst' | 'xaf' | 'xcd' | 'xof' | 'xpf' | 'yer' | 'zar' | 'zmw';

/**
 * Stripe Subscription statuses.
 *
 * https://docs.stripe.com/api/subscriptions/object#subscription_object-status
 *
 */
export type StripeSubscriptionStatus = 'incomplete' | 'incomplete_expired' | 'trialing' | 'active' | 'past_due' | 'canceled' | 'unpaid';

export type Submission = {
    id: string;
    isSpam: boolean;
    values: Array<SubmissionValue>;
};

export type SubmissionCreate = {
    data: {};
};

export type SubmissionValue = {
    id: string;
    value?: unknown;
    formFieldId?: string | null;
    formFieldName?: string | null;
    formFieldIsActive?: boolean | null;
};

export type Team = {
    id: string;
    slug: string;
    name: string;
    description?: string | null;
    billingCustomerId?: string | null;
    subscriptions: Array<BillingSubscription>;
    paidUser: boolean;
    freemiumUser: boolean;
};

export type TeamCreate = {
    name: string;
    description?: string | null;
    slug?: string | null;
};

/**
 * Team Roles.
 */
export type TeamRole = 'admin' | 'member';

export type TeamUpdate = {
    name?: string | null;
    description?: string | null;
};

export type User = {
    id: string;
    email: string;
    name?: string | null;
    isSuperuser: boolean;
    isActive: boolean;
    isVerified: boolean;
    createdAt: string;
    updatedAt: string;
    teams?: Array<UserTeam> | null;
};

export type UserCreate = {
    email: string;
    password: string;
    name?: string | null;
    isSuperuser?: boolean | null;
    isActive?: boolean | null;
    isVerified?: boolean | null;
};

export type UserLogin = {
    username: string;
    password: string;
};

export type UserRegister = {
    email: string;
    password: string;
    password2: string;
    name?: string | null;
};

export type UserTeam = {
    teamId?: string | null;
    name?: string | null;
    isOwner?: boolean | null;
    teamRole?: TeamRole | null;
};

export type UserUpdate = {
    email?: string | null;
    name?: string | null;
    isSuperuser?: boolean | null;
    isActive?: boolean | null;
    isVerified?: boolean | null;
};

export type ApiV1AccessLoginLoginData = {
    body: UserLogin;
    path?: never;
    query?: never;
    url: '/api/v1/access/login';
};

export type ApiV1AccessLoginLoginErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
    /**
     * Additional response
     */
    403: LoginErrorContainer;
};

export type ApiV1AccessLoginLoginError = ApiV1AccessLoginLoginErrors[keyof ApiV1AccessLoginLoginErrors];

export type ApiV1AccessLoginLoginResponses = {
    /**
     * Additional response
     */
    201: OAuth2Login;
};

export type ApiV1AccessLoginLoginResponse = ApiV1AccessLoginLoginResponses[keyof ApiV1AccessLoginLoginResponses];

export type ApiV1AccessLogoutLogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/access/logout';
};

export type ApiV1AccessLogoutLogoutResponses = {
    /**
     * Document created, URL follows
     */
    201: unknown;
};

export type ApiV1AccessSignupSignupData = {
    body: UserRegister;
    path?: never;
    query?: never;
    url: '/api/v1/access/signup';
};

export type ApiV1AccessSignupSignupErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1AccessSignupSignupError = ApiV1AccessSignupSignupErrors[keyof ApiV1AccessSignupSignupErrors];

export type ApiV1AccessSignupSignupResponses = {
    /**
     * Document created, URL follows
     */
    201: User;
};

export type ApiV1AccessSignupSignupResponse = ApiV1AccessSignupSignupResponses[keyof ApiV1AccessSignupSignupResponses];

export type ApiV1UsersListUsersData = {
    body?: never;
    path?: never;
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/users';
};

export type ApiV1UsersListUsersErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1UsersListUsersError = ApiV1UsersListUsersErrors[keyof ApiV1UsersListUsersErrors];

export type ApiV1UsersListUsersResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        items?: Array<User>;
        /**
         * Maximal number of items to send.
         */
        limit?: number;
        /**
         * Offset from the beginning of the query.
         */
        offset?: number;
        /**
         * Total number of items.
         */
        total?: number;
    };
};

export type ApiV1UsersListUsersResponse = ApiV1UsersListUsersResponses[keyof ApiV1UsersListUsersResponses];

export type ApiV1UsersCreateUserData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/users';
};

export type ApiV1UsersCreateUserErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1UsersCreateUserError = ApiV1UsersCreateUserErrors[keyof ApiV1UsersCreateUserErrors];

export type ApiV1UsersCreateUserResponses = {
    /**
     * Document created, URL follows
     */
    201: User;
};

export type ApiV1UsersCreateUserResponse = ApiV1UsersCreateUserResponses[keyof ApiV1UsersCreateUserResponses];

export type ApiV1UsersUserIdDeleteUserData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type ApiV1UsersUserIdDeleteUserErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1UsersUserIdDeleteUserError = ApiV1UsersUserIdDeleteUserErrors[keyof ApiV1UsersUserIdDeleteUserErrors];

export type ApiV1UsersUserIdDeleteUserResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1UsersUserIdDeleteUserResponse = ApiV1UsersUserIdDeleteUserResponses[keyof ApiV1UsersUserIdDeleteUserResponses];

export type ApiV1UsersUserIdGetUserData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type ApiV1UsersUserIdGetUserErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1UsersUserIdGetUserError = ApiV1UsersUserIdGetUserErrors[keyof ApiV1UsersUserIdGetUserErrors];

export type ApiV1UsersUserIdGetUserResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: User;
};

export type ApiV1UsersUserIdGetUserResponse = ApiV1UsersUserIdGetUserResponses[keyof ApiV1UsersUserIdGetUserResponses];

export type ApiV1UsersUserIdUpdateUserData = {
    body: UserUpdate;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type ApiV1UsersUserIdUpdateUserErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1UsersUserIdUpdateUserError = ApiV1UsersUserIdUpdateUserErrors[keyof ApiV1UsersUserIdUpdateUserErrors];

export type ApiV1UsersUserIdUpdateUserResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: User;
};

export type ApiV1UsersUserIdUpdateUserResponse = ApiV1UsersUserIdUpdateUserResponses[keyof ApiV1UsersUserIdUpdateUserResponses];

export type ApiV1UsersMeProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users/me';
};

export type ApiV1UsersMeProfileResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: User;
};

export type ApiV1UsersMeProfileResponse = ApiV1UsersMeProfileResponses[keyof ApiV1UsersMeProfileResponses];

export type ApiV1BillingWebhookEventHandleEventData = {
    body: unknown;
    path?: never;
    query?: never;
    url: '/api/v1/billing/webhook-event';
};

export type ApiV1BillingWebhookEventHandleEventErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1BillingWebhookEventHandleEventError = ApiV1BillingWebhookEventHandleEventErrors[keyof ApiV1BillingWebhookEventHandleEventErrors];

export type ApiV1BillingWebhookEventHandleEventResponses = {
    /**
     * Document created, URL follows
     */
    201: unknown;
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsData = {
    body?: never;
    path: {
        team_id: string;
        project_id: string;
    };
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/teams/{team_id}/projects/{project_id}/domains';
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsError = ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        items?: Array<Domain>;
        /**
         * Maximal number of items to send.
         */
        limit?: number;
        /**
         * Offset from the beginning of the query.
         */
        offset?: number;
        /**
         * Total number of items.
         */
        total?: number;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsResponse = ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsListDomainsResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainData = {
    body: DomainCreate;
    path: {
        team_id: string;
        project_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/domains';
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainError = ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainResponses = {
    /**
     * Document created, URL follows
     */
    201: Domain;
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainResponse = ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsCreateDomainResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainData = {
    body?: never;
    path: {
        domain_id: string;
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/domains/{domain_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainError = ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainResponse = ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdDeleteDomainResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainData = {
    body?: never;
    path: {
        domain_id: string;
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/domains/{domain_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainError = ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Domain;
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainResponse = ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdGetDomainResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainData = {
    body: DomainUpdate;
    path: {
        domain_id: string;
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/domains/{domain_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainError = ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Domain;
};

export type ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainResponse = ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdDomainsDomainIdUpdateDomainResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsData = {
    body?: never;
    path: {
        team_id: string;
        project_id: string;
    };
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsError = ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        items?: Array<Form>;
        /**
         * Maximal number of items to send.
         */
        limit?: number;
        /**
         * Offset from the beginning of the query.
         */
        offset?: number;
        /**
         * Total number of items.
         */
        total?: number;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsListFormsResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormData = {
    body: FormCreate;
    path: {
        team_id: string;
        project_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormError = ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormResponses = {
    /**
     * Document created, URL follows
     */
    201: Form;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsCreateFormResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormData = {
    body?: never;
    path: {
        form_id: string;
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdDeleteFormResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormData = {
    body?: never;
    path: {
        form_id: string;
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Form;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdGetFormResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormData = {
    body: FormUpdate;
    path: {
        form_id: string;
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Form;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdUpdateFormResponses];

export type ApiV1fFormIdCreateSubmissionData = {
    body: SubmissionCreate;
    path: {
        form_id: string;
    };
    query?: never;
    url: '/api/v1/f/{form_id}';
};

export type ApiV1fFormIdCreateSubmissionErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1fFormIdCreateSubmissionError = ApiV1fFormIdCreateSubmissionErrors[keyof ApiV1fFormIdCreateSubmissionErrors];

export type ApiV1fFormIdCreateSubmissionResponses = {
    /**
     * Document created, URL follows
     */
    201: Submission | string;
};

export type ApiV1fFormIdCreateSubmissionResponse = ApiV1fFormIdCreateSubmissionResponses[keyof ApiV1fFormIdCreateSubmissionResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionData = {
    body?: never;
    path: {
        submission_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/submissions/{submission_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdDeleteSubmissionResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionData = {
    body?: never;
    path: {
        submission_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/submissions/{submission_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Submission;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdGetSubmissionResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileData = {
    body?: never;
    path: {
        submission_id: string;
        form_field: string;
        form_id: string;
        team_id: string;
        project_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/submissions/{submission_id}/file/{form_field}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileResponses = {
    /**
     * File Download
     */
    200: string;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsSubmissionIdFileFormFieldGetSubmissionFileResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsData = {
    body?: never;
    path: {
        form_id: string;
        project_id: string;
        team_id: string;
    };
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/submissions';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        items?: Array<Submission>;
        /**
         * Maximal number of items to send.
         */
        limit?: number;
        /**
         * Offset from the beginning of the query.
         */
        offset?: number;
        /**
         * Total number of items.
         */
        total?: number;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdSubmissionsListSubmissionsResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsData = {
    body?: never;
    path: {
        form_id: string;
        project_id: string;
        team_id: string;
    };
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/form-fields';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        items?: Array<FormField>;
        /**
         * Maximal number of items to send.
         */
        limit?: number;
        /**
         * Offset from the beginning of the query.
         */
        offset?: number;
        /**
         * Total number of items.
         */
        total?: number;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsListFormFieldsResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldData = {
    body: FormFieldCreate;
    path: {
        team_id: string;
        project_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/form-fields';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldResponses = {
    /**
     * Document created, URL follows
     */
    201: FormField;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsCreateFormFieldResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldData = {
    body?: never;
    path: {
        form_field_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/form-fields/{form_field_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdDeleteFormFieldResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldData = {
    body?: never;
    path: {
        form_field_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/form-fields/{form_field_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: FormField;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdGetFormFieldResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldData = {
    body: FormFieldUpdate;
    path: {
        form_field_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/form-fields/{form_field_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: FormField;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdFormFieldsFormFieldIdUpdateFormFieldResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssData = {
    body?: never;
    path: {
        form_id: string;
        project_id: string;
        team_id: string;
    };
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/notification-settings';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: NotificationSettings | null;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsListNotificationSettingssResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsData = {
    body: NotificationSettingsCreate;
    path: {
        form_id: string;
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/notification-settings';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsResponses = {
    /**
     * Document created, URL follows
     */
    201: NotificationSettings;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsCreateNotificationSettingsResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsData = {
    body?: never;
    path: {
        notification_settings_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/notification-settings/{notification_settings_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdDeleteNotificationSettingsResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsData = {
    body?: never;
    path: {
        notification_settings_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/notification-settings/{notification_settings_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: NotificationSettings;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdGetNotificationSettingsResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsData = {
    body: NotificationSettingsUpdate;
    path: {
        notification_settings_id: string;
        project_id: string;
        team_id: string;
        form_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}/forms/{form_id}/notification-settings/{notification_settings_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsError = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: NotificationSettings;
};

export type ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsResponse = ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdFormsFormIdNotificationSettingsNotificationSettingsIdUpdateNotificationSettingsResponses];

export type ApiV1TeamsTeamIdProjectsListProjectsData = {
    body?: never;
    path: {
        team_id: string;
    };
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/teams/{team_id}/projects';
};

export type ApiV1TeamsTeamIdProjectsListProjectsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsListProjectsError = ApiV1TeamsTeamIdProjectsListProjectsErrors[keyof ApiV1TeamsTeamIdProjectsListProjectsErrors];

export type ApiV1TeamsTeamIdProjectsListProjectsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        items?: Array<Project>;
        /**
         * Maximal number of items to send.
         */
        limit?: number;
        /**
         * Offset from the beginning of the query.
         */
        offset?: number;
        /**
         * Total number of items.
         */
        total?: number;
    };
};

export type ApiV1TeamsTeamIdProjectsListProjectsResponse = ApiV1TeamsTeamIdProjectsListProjectsResponses[keyof ApiV1TeamsTeamIdProjectsListProjectsResponses];

export type ApiV1TeamsTeamIdProjectsCreateProjectData = {
    body: ProjectCreate;
    path: {
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects';
};

export type ApiV1TeamsTeamIdProjectsCreateProjectErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsCreateProjectError = ApiV1TeamsTeamIdProjectsCreateProjectErrors[keyof ApiV1TeamsTeamIdProjectsCreateProjectErrors];

export type ApiV1TeamsTeamIdProjectsCreateProjectResponses = {
    /**
     * Document created, URL follows
     */
    201: Project;
};

export type ApiV1TeamsTeamIdProjectsCreateProjectResponse = ApiV1TeamsTeamIdProjectsCreateProjectResponses[keyof ApiV1TeamsTeamIdProjectsCreateProjectResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectData = {
    body?: never;
    path: {
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectError = ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectResponse = ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdDeleteProjectResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdGetProjectData = {
    body?: never;
    path: {
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdGetProjectErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdGetProjectError = ApiV1TeamsTeamIdProjectsProjectIdGetProjectErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdGetProjectErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdGetProjectResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Project;
};

export type ApiV1TeamsTeamIdProjectsProjectIdGetProjectResponse = ApiV1TeamsTeamIdProjectsProjectIdGetProjectResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdGetProjectResponses];

export type ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectData = {
    body: ProjectUpdate;
    path: {
        project_id: string;
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/projects/{project_id}';
};

export type ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectError = ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectErrors[keyof ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectErrors];

export type ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Project;
};

export type ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectResponse = ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectResponses[keyof ApiV1TeamsTeamIdProjectsProjectIdUpdateProjectResponses];

export type ApiV1HealthCheckHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/health';
};

export type ApiV1HealthCheckHealthResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        [key: string]: unknown;
    };
};

export type ApiV1HealthCheckHealthResponse = ApiV1HealthCheckHealthResponses[keyof ApiV1HealthCheckHealthResponses];

export type ApiV1TeamsListTeamsData = {
    body?: never;
    path?: never;
    query?: {
        createdBefore?: string | null;
        createdAfter?: string | null;
        updatedBefore?: string | null;
        updatedAfter?: string | null;
        ids?: Array<string> | null;
        currentPage?: number;
        pageSize?: number;
        searchField?: string | null;
        searchString?: string | null;
        searchIgnoreCase?: boolean | null;
        orderBy?: string | null;
        sortOrder?: 'asc' | 'desc' | null;
    };
    url: '/api/v1/teams';
};

export type ApiV1TeamsListTeamsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsListTeamsError = ApiV1TeamsListTeamsErrors[keyof ApiV1TeamsListTeamsErrors];

export type ApiV1TeamsListTeamsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        items?: Array<Team>;
        /**
         * Maximal number of items to send.
         */
        limit?: number;
        /**
         * Offset from the beginning of the query.
         */
        offset?: number;
        /**
         * Total number of items.
         */
        total?: number;
    };
};

export type ApiV1TeamsListTeamsResponse = ApiV1TeamsListTeamsResponses[keyof ApiV1TeamsListTeamsResponses];

export type ApiV1TeamsCreateTeamData = {
    body: TeamCreate;
    path?: never;
    query?: never;
    url: '/api/v1/teams';
};

export type ApiV1TeamsCreateTeamErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsCreateTeamError = ApiV1TeamsCreateTeamErrors[keyof ApiV1TeamsCreateTeamErrors];

export type ApiV1TeamsCreateTeamResponses = {
    /**
     * Document created, URL follows
     */
    201: Team;
};

export type ApiV1TeamsCreateTeamResponse = ApiV1TeamsCreateTeamResponses[keyof ApiV1TeamsCreateTeamResponses];

export type ApiV1TeamsTeamIdDeleteTeamData = {
    body?: never;
    path: {
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}';
};

export type ApiV1TeamsTeamIdDeleteTeamErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdDeleteTeamError = ApiV1TeamsTeamIdDeleteTeamErrors[keyof ApiV1TeamsTeamIdDeleteTeamErrors];

export type ApiV1TeamsTeamIdDeleteTeamResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type ApiV1TeamsTeamIdDeleteTeamResponse = ApiV1TeamsTeamIdDeleteTeamResponses[keyof ApiV1TeamsTeamIdDeleteTeamResponses];

export type ApiV1TeamsTeamIdGetTeamData = {
    body?: never;
    path: {
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}';
};

export type ApiV1TeamsTeamIdGetTeamErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdGetTeamError = ApiV1TeamsTeamIdGetTeamErrors[keyof ApiV1TeamsTeamIdGetTeamErrors];

export type ApiV1TeamsTeamIdGetTeamResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Team;
};

export type ApiV1TeamsTeamIdGetTeamResponse = ApiV1TeamsTeamIdGetTeamResponses[keyof ApiV1TeamsTeamIdGetTeamResponses];

export type ApiV1TeamsTeamIdUpdateTeamData = {
    body: TeamUpdate;
    path: {
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}';
};

export type ApiV1TeamsTeamIdUpdateTeamErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdUpdateTeamError = ApiV1TeamsTeamIdUpdateTeamErrors[keyof ApiV1TeamsTeamIdUpdateTeamErrors];

export type ApiV1TeamsTeamIdUpdateTeamResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Team;
};

export type ApiV1TeamsTeamIdUpdateTeamResponse = ApiV1TeamsTeamIdUpdateTeamResponses[keyof ApiV1TeamsTeamIdUpdateTeamResponses];

export type ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeData = {
    body?: never;
    path: {
        team_id: string;
    };
    query?: never;
    url: '/api/v1/teams/{team_id}/storage-directory-size';
};

export type ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeError = ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeErrors[keyof ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeErrors];

export type ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: number;
};

export type ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeResponse = ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeResponses[keyof ApiV1TeamsTeamIdStorageDirectorySizeGetStorageDirectorySizeResponses];

export type ClientOptions = {
    baseURL: `${string}://${string}` | (string & {});
};